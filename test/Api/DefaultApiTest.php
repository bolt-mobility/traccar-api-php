<?php
/**
 * DefaultApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * traccar
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.16
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * DefaultApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DefaultApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for attributesComputedGet
     *
     * Fetch a list of Attributes.
     *
     */
    public function testAttributesComputedGet()
    {
    }

    /**
     * Test case for attributesComputedIdDelete
     *
     * Delete an Attribute.
     *
     */
    public function testAttributesComputedIdDelete()
    {
    }

    /**
     * Test case for attributesComputedIdPut
     *
     * Update an Attribute.
     *
     */
    public function testAttributesComputedIdPut()
    {
    }

    /**
     * Test case for attributesComputedPost
     *
     * Create an Attribute.
     *
     */
    public function testAttributesComputedPost()
    {
    }

    /**
     * Test case for calendarsGet
     *
     * Fetch a list of Calendars.
     *
     */
    public function testCalendarsGet()
    {
    }

    /**
     * Test case for calendarsIdDelete
     *
     * Delete a Calendar.
     *
     */
    public function testCalendarsIdDelete()
    {
    }

    /**
     * Test case for calendarsIdPut
     *
     * Update a Calendar.
     *
     */
    public function testCalendarsIdPut()
    {
    }

    /**
     * Test case for calendarsPost
     *
     * Create a Calendar.
     *
     */
    public function testCalendarsPost()
    {
    }

    /**
     * Test case for commandsGet
     *
     * Fetch a list of Saved Commands.
     *
     */
    public function testCommandsGet()
    {
    }

    /**
     * Test case for commandsIdDelete
     *
     * Delete a Saved Command.
     *
     */
    public function testCommandsIdDelete()
    {
    }

    /**
     * Test case for commandsIdPut
     *
     * Update a Saved Command.
     *
     */
    public function testCommandsIdPut()
    {
    }

    /**
     * Test case for commandsPost
     *
     * Create a Saved Command.
     *
     */
    public function testCommandsPost()
    {
    }

    /**
     * Test case for commandsSendGet
     *
     * Fetch a list of Saved Commands supported by Device at the moment.
     *
     */
    public function testCommandsSendGet()
    {
    }

    /**
     * Test case for commandsSendPost
     *
     * Dispatch commands to device.
     *
     */
    public function testCommandsSendPost()
    {
    }

    /**
     * Test case for commandsTypesGet
     *
     * Fetch a list of available Commands for the Device or all possible Commands if Device ommited.
     *
     */
    public function testCommandsTypesGet()
    {
    }

    /**
     * Test case for devicesGet
     *
     * Fetch a list of Devices.
     *
     */
    public function testDevicesGet()
    {
    }

    /**
     * Test case for devicesIdDelete
     *
     * Delete a Device.
     *
     */
    public function testDevicesIdDelete()
    {
    }

    /**
     * Test case for devicesIdDistancePut
     *
     * Update the distance counter of the Device.
     *
     */
    public function testDevicesIdDistancePut()
    {
    }

    /**
     * Test case for devicesIdPut
     *
     * Update a Device.
     *
     */
    public function testDevicesIdPut()
    {
    }

    /**
     * Test case for devicesPost
     *
     * Create a Device.
     *
     */
    public function testDevicesPost()
    {
    }

    /**
     * Test case for driversGet
     *
     * Fetch a list of Drivers.
     *
     */
    public function testDriversGet()
    {
    }

    /**
     * Test case for driversIdDelete
     *
     * Delete a Driver.
     *
     */
    public function testDriversIdDelete()
    {
    }

    /**
     * Test case for driversIdPut
     *
     * Update a Driver.
     *
     */
    public function testDriversIdPut()
    {
    }

    /**
     * Test case for driversPost
     *
     * Create a Driver.
     *
     */
    public function testDriversPost()
    {
    }

    /**
     * Test case for eventsIdGet
     *
     * .
     *
     */
    public function testEventsIdGet()
    {
    }

    /**
     * Test case for geofencesGet
     *
     * Fetch a list of Geofences.
     *
     */
    public function testGeofencesGet()
    {
    }

    /**
     * Test case for geofencesIdDelete
     *
     * Delete a Geofence.
     *
     */
    public function testGeofencesIdDelete()
    {
    }

    /**
     * Test case for geofencesIdPut
     *
     * Update a Geofence.
     *
     */
    public function testGeofencesIdPut()
    {
    }

    /**
     * Test case for geofencesPost
     *
     * Create a Geofence.
     *
     */
    public function testGeofencesPost()
    {
    }

    /**
     * Test case for groupsGet
     *
     * Fetch a list of Groups.
     *
     */
    public function testGroupsGet()
    {
    }

    /**
     * Test case for groupsIdDelete
     *
     * Delete a Group.
     *
     */
    public function testGroupsIdDelete()
    {
    }

    /**
     * Test case for groupsIdPut
     *
     * Update a Group.
     *
     */
    public function testGroupsIdPut()
    {
    }

    /**
     * Test case for groupsPost
     *
     * Create a Group.
     *
     */
    public function testGroupsPost()
    {
    }

    /**
     * Test case for notificationsGet
     *
     * Fetch a list of Notifications.
     *
     */
    public function testNotificationsGet()
    {
    }

    /**
     * Test case for notificationsIdDelete
     *
     * Delete a Notification.
     *
     */
    public function testNotificationsIdDelete()
    {
    }

    /**
     * Test case for notificationsIdPut
     *
     * Update a Notification.
     *
     */
    public function testNotificationsIdPut()
    {
    }

    /**
     * Test case for notificationsPost
     *
     * Create a Notification.
     *
     */
    public function testNotificationsPost()
    {
    }

    /**
     * Test case for notificationsTestPost
     *
     * Send test notification to current user via Email and SMS.
     *
     */
    public function testNotificationsTestPost()
    {
    }

    /**
     * Test case for notificationsTypesGet
     *
     * Fetch a list of available Notification types.
     *
     */
    public function testNotificationsTypesGet()
    {
    }

    /**
     * Test case for permissionsDelete
     *
     * Unlink an Object from another Object.
     *
     */
    public function testPermissionsDelete()
    {
    }

    /**
     * Test case for permissionsPost
     *
     * Link an Object to another Object.
     *
     */
    public function testPermissionsPost()
    {
    }

    /**
     * Test case for positionsGet
     *
     * Fetches a list of Positions.
     *
     */
    public function testPositionsGet()
    {
    }

    /**
     * Test case for reportsEventsGet
     *
     * Fetch a list of Events within the time period for the Devices or Groups.
     *
     */
    public function testReportsEventsGet()
    {
    }

    /**
     * Test case for reportsRouteGet
     *
     * Fetch a list of Positions within the time period for the Devices or Groups.
     *
     */
    public function testReportsRouteGet()
    {
    }

    /**
     * Test case for reportsStopsGet
     *
     * Fetch a list of ReportStops within the time period for the Devices or Groups.
     *
     */
    public function testReportsStopsGet()
    {
    }

    /**
     * Test case for reportsSummaryGet
     *
     * Fetch a list of ReportSummary within the time period for the Devices or Groups.
     *
     */
    public function testReportsSummaryGet()
    {
    }

    /**
     * Test case for reportsTripsGet
     *
     * Fetch a list of ReportTrips within the time period for the Devices or Groups.
     *
     */
    public function testReportsTripsGet()
    {
    }

    /**
     * Test case for serverGet
     *
     * Fetch Server information.
     *
     */
    public function testServerGet()
    {
    }

    /**
     * Test case for serverPut
     *
     * Update Server information.
     *
     */
    public function testServerPut()
    {
    }

    /**
     * Test case for sessionDelete
     *
     * Close the Session.
     *
     */
    public function testSessionDelete()
    {
    }

    /**
     * Test case for sessionGet
     *
     * Fetch Session information.
     *
     */
    public function testSessionGet()
    {
    }

    /**
     * Test case for sessionPost
     *
     * Create a new Session.
     *
     */
    public function testSessionPost()
    {
    }

    /**
     * Test case for statisticsGet
     *
     * Fetch server Statistics.
     *
     */
    public function testStatisticsGet()
    {
    }

    /**
     * Test case for usersGet
     *
     * Fetch a list of Users.
     *
     */
    public function testUsersGet()
    {
    }

    /**
     * Test case for usersIdDelete
     *
     * Delete a User.
     *
     */
    public function testUsersIdDelete()
    {
    }

    /**
     * Test case for usersIdPut
     *
     * Update a User.
     *
     */
    public function testUsersIdPut()
    {
    }

    /**
     * Test case for usersPost
     *
     * Create a User.
     *
     */
    public function testUsersPost()
    {
    }
}
